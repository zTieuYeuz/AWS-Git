[
{
	"uri": "//localhost:1313/3-vpnsitetositeaws/3.1-createvirtualprivategateway/",
	"title": "Cấu hình virteal private Gateway",
	"tags": [],
	"description": "",
	"content": "Here\u0026rsquo;s the English translation for your steps to create a Virtual Private Gateway on AWS:\nCreating a Virtual Private Gateway Access the VPC Console\nSelect Virtual Private Gateway Click Create Virtual Private Gateway In the Create Virtual Private Gateway Interface\nFor the Name tag, enter VPN TO DC Select Amazon default ASN Click Create virtual private gateway Attach the Virtual Private Gateway to a VPC\nClick Actions Select Attach to VPC In the Attach to VPC Interface\nChoose VPC ASG Click Attach to VPC Complete the Process and Check that the State is Attached "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createec2/2.1.1-createvpc/",
	"title": "Create VPC",
	"tags": [],
	"description": "",
	"content": "Create VPC Lab VPC Go to VPC service management console Click Your VPC. Click Create VPC. At the Create VPC page. In the Name tag field, enter Lab VPC. In the IPv4 CIDR field, enter: 10.10.0.0/16. Click Create VPC. "
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Session Manager is a function within the AWS System Manager service, SSM provides verifiable and secure version management without opening incoming ports, without Bastion Host or SSH key management. Session Manager also makes it easy to comply with corporate policies that require controlled access to instances, strict security practices, and fully auditable logs with instance access details, while still providing end-users with one-click cross-platform access to your managed instances.\nBy using Session Manager, you get the following advantages that traditional methods do not have:\nNo need to open port 22 for SSH protocol, so it is more secure. Can be configured so that the connection does not need to go outside the internet, so it is more secure. No need to manage the server\u0026rsquo;s private key to connect to SSH. Centralized management of users using AWS IAM. Access to the server easily and simply with one click. Faster access time than traditional methods like SSH Support many different operating systems such as Linux, Windows, MacOS Log the connection sessions and commands executed while connecting to the server. With the above advantages, you can use Session Manager instead of using Bastion host technique to save us time and money when managing Bastion server.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createec2/",
	"title": "Preparing VPC and EC2",
	"tags": [],
	"description": "",
	"content": "In this step, we will need to create a VPC with 2 public / private subnets. Then create 1 EC2 Instance Linux located in the public subnet, 1 EC2 Instance Windows located in the private subnet.\nThe architecture overview after you complete this step will be as follows:\nTo learn how to create EC2 instances and VPCs with public/private subnets, you can refer to the lab:\nAbout Amazon EC2 Works with Amazon VPC Content Create VPC Create Public Subnet Create Private Subnet Create security group Create public Linux server Create private Windows server "
},
{
	"uri": "//localhost:1313/",
	"title": "VPN Site to Site Aws And Fortigate",
	"tags": [],
	"description": "",
	"content": "Work with Amazon System Manager - Session Manager Overall In this lab, you\u0026rsquo;ll learn the basics and practice of Amazon System Manager - Session Manager . Perform creating public and private instance connections.\nContent Introduction Accounting VPN Site to Site AWS MinhThoai-chưaxong "
},
{
	"uri": "//localhost:1313/2-prerequiste/",
	"title": "Accounting",
	"tags": [],
	"description": "",
	"content": "Phụ lục\nMFA-Alias User and Group Role and Policy Budgets "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createec2/2.1.2-createpublicsubnet/",
	"title": "Create Public Subnet",
	"tags": [],
	"description": "",
	"content": "Create Public Subnet Click Subnets. Click Create subnet. At the Create subnet page. In the VPC ID section, click Lab VPC. In the Subnet name field, enter Lab Public Subnet. In the Availability Zone section, select the first Availability zone. In the field IPv4 CIRD block enter 10.10.1.0/24. Scroll to the bottom of the page, click Create subnet.\nClick Lab Public Subnet.\nClick Actions. Click Edit subnet settings. Click Enable auto-assign public IPv4 address. Click Save. Click Internet Gateways. Click Create internet gateway. At the Create internet gateway page. In the Name tag field, enter Lab IGW. Click Create internet gateway. After successful creation, click Actions. Click Attach to VPC. At the Attach to VPC page. In the Available VPCs section, select Lab VPC. Click Attach internet gateway. Check the successful attaching process as shown below. Next we will create a custom route table to assign to Lab Public Subnet. Click Route Tables. Click Create route table. At the Create route table page. In the Name field, enter Lab Publicrtb. In the VPC section, select Lab VPC. Click Create route table. After creating the route table successfully. Click Edit routes. At the Edit routes page. Click Add route. In the Destination field, enter 0.0.0.0/0 In the Target section, select Internet Gateway and then select Lab IGW. Click Save changes. Click the Subnet associations tab. Click Edit subnet associations to proceed with the associate custom route table we just created in Lab Public Subnet. At the Edit subnet associations page. Click on Lab Public Subnet. Click Save associations. Check that the route table information has been associated with Lab Public Subnet and the internet route information has been pointed to the Internet Gateway as shown below. "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.2-createiamrole/",
	"title": "Create user Group",
	"tags": [],
	"description": "",
	"content": " Create User Create Group user "
},
{
	"uri": "//localhost:1313/3-vpnsitetositeaws/3.3-createvpn/",
	"title": "Cấu hình Site to Site VPN",
	"tags": [],
	"description": "",
	"content": "Tạo kết nối VPN\nTruy cập VPC Chọn Site-to-Site VPN Connections Chọn Create VPN Connection Trong giao diện Create VPN Connection Name tag, nhập VPN Connection to DC Target Gateway Type: Chọn Virtual Private Gateway Virtual Private Gateway: Chọn VPN Gateway Customer Gateway: Existing Customer Gateway ID: Chọn Customer Gateway Routing Options: Dynamic (Requires BGP) Local IPV4 network CIDR: bạn có thể ko nhập hoặc nhập local IP ở DC. Cụ thể mình nhập range local 172.16.4.0/24 Remote IPv4 network CIDR: bạn có thể để trống hoặc nhập IP của CIDR aws. Cụ thể ở đây là 10.10.0.0/16 Tiếp tục thực hiện cấu hình Mở rộng Tunnel 1 options - Optional. Trong tunnel active – Chọn Enable để gửi log VPN về cloudwatch Amazon CloudWatch log group: chọn vpns2s/log Tương tự Enable trong tunnel 2 options Chọn Create VPN Connection Chọn Create VPN Connection Đợi khoảng 5 phút sau, hoàn tất tạo VPN Connection Cấu hình propagation cho các route table Trong giao diện VPC, chọn Route Tables Chọn Route table - Public Chọn Route Propagation Chọn Edit route propagation Trong giao diện Edit route propagation Chọn Enable Chọn Save Hoàn tất và kiểm tra lại Route Propagation đã chuyển sang Yes Tương tự Route Propagation đối với Private subnet "
},
{
	"uri": "//localhost:1313/3-vpnsitetositeaws/",
	"title": "Configuring Site to Site VPN on AWS",
	"tags": [],
	"description": "",
	"content": "We connect the On-premise Data Center to Amazon VPC using a Fortigate hardware VPN. To establish a Site to Site VPN connection, we need to create and configure a Virtual Private Gateway (VPG) and a Customer Gateway (CGW).\nThe Virtual Private Gateway (VPG) is a control center for managing the VPN connection installed at the AWS end. A Customer Gateway (CGW) is a component that represents the hardware or software VPN device installed at the customer end, which in this case is Fortigate. A VPN tunnel will be established once data traffic is transmitted between AWS and the customer\u0026rsquo;s network. In this connection, we must specify the type of routing used to ensure the security and quality of data transmission. If the CGW on the customer side supports Border Gateway Protocol (BGP), dynamic routing must be set in the VPN connection configuration. Amazon VPC provides various types of CGWs, each associated with a VPG, but a single VPG can be linked with multiple CGWs (many-to-one design). To support this model, the CGW’s IP address must be unique within a region. Amazon VPC also provides the necessary information for network administrators to configure the CGW and establish a VPN connection to the VPG on AWS. The VPN connection always includes two Internet Protocol Security (IPSec) tunnels to ensure high availability.\nBelow are the key characteristics of VPG, CGW, and VPN:\nVPG is the endpoint of the VPN tunnel on AWS. CGW can be a hardware device or a software application located at the customer\u0026rsquo;s end of the VPN tunnel. You must initiate the VPN tunnel connection from the CGW to the VPG. VPG supports both dynamic routing (BGP) and static routing. The VPN connection always has two tunnels to ensure high availability of the connection to the VPC from the customer site. This lab helps us learn how to set up a Site to Site VPN connection in AWS. In practice, this solution is quite popular among enterprises due to the widespread use and ease of configuration of Fortigate devices, which are commonly used in businesses. AWS also provides configuration guides for each type of Customer Gateway device in a configuration file. The only concern for the customer is to prepare the internet connection, from which a secure and private tunnel (using IPSec) is created to connect to AWS via the AWS VPN tunnel. Within the scope of this lab, we assume that we have a Main office (VPC ASG) and a Branch office located in an On-premises Data Center to differentiate the network. In the VPC, we create an EC2 instance with SSM enabled and a PC in the DC. Our task is to configure the VPN so that the Private IP addresses on both ends can ping each other using the Site-to-Site VPN.\nAppendix:\nCreate Virtual Private Gateway Configure Customer Gateway Create VPN Connection "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createec2/2.1.3-createprivatesubnet/",
	"title": "Create Private Subnet",
	"tags": [],
	"description": "",
	"content": "Create Private Subnet Click Subnets. Click Create subnet. At the Create subnet page. In the VPC ID section, click Lab VPC. In the Subnet name field, enter Lab Private Subnet. In the Availability Zone section, select the first Availability zone. In the field IPv4 CIRD block enter 10.10.2.0/24. Scroll to the bottom of the page, click Create subnet. The next step is to create the necessary security groups for the lab.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createec2/2.1.4-createsecgroup/",
	"title": "Create security groups",
	"tags": [],
	"description": "",
	"content": "Create security groups In this step, we will proceed to create the security groups used for our instances. As you can see, these security groups will not need to open traditional ports to ssh like port 22 or remote desktop through port 3389.\nCreate security group for Linux instance located in public subnet Go to VPC service management console Click Security Group. Click Create security group. In the Security group name field, enter SG Public Linux Instance. In the Description section, enter SG Public Linux Instance. In the VPC section, click the X to reselect the Lab VPC you created for this lab. Keep Outbound rule, drag the mouse to the bottom. Click Create security group. As you can see, the security group we created to use for Linux public instances will not need to open traditional ports to ssh like port 22.\nCreate a security group for a Windows instance located in a private subnet After successfully creating a security group for the Linux instance located in the public subnet, click the Security Groups link to return to the Security groups list. Click Create security group.\nIn the Security group name field, enter SG Private Windows Instance.\nIn the Description section, enter SG Private Windows Instance. In the VPC section, click the X to reselect the Lab VPC you created for this lab. Scroll down. Add Outbound rule to allow TCP 443 connection to 10.10.0.0/16 ( CIDR of Lab VPC we created) Click Create security group. For the Instance in the private subnet, we will connect to the Session Manager endpoint over a TLS encrypted connection, so we need to allow outbound connection from our instance to VPC CIDR through port 443.\nCreate security group for VPC Endpoint In this step, we will create security group for VPC Endpoint of Session Manager. After successfully creating the security group for the Windows instance in the private subnet, click the Security Groups link to return to the Security groups list. Click Create security group. In the Security group name field, enter SG VPC Endpoint. In the Description section, enter SG VPC Endpoint. In the VPC section, click the X to reselect the Lab VPC you created for this lab. Scroll down. Delete Outbound rule. Add Inbound rule allowing TCP 443 to come from 10.10.0.0/16 ( CIDR of Lab VPC we created ). Click Create security group. So we are done creating the necessary security groups for EC2 instances and VPC Endpoints.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createec2/2.1.5-createec2linux/",
	"title": "Create Public instance",
	"tags": [],
	"description": "",
	"content": " Go to EC2 service management console Click Instances. Click Launch instances. On the Step 1: Choose an Amazon Machine Image (AMI) page. Click Select to select AMI Amazon Linux 2 AMI. On the Step 2: Choose an Instance Type page. Click on Instance type t2.micro. Click Next: Configure Instance Details. At Step 3: Configure Instance Details page In the Network section, select Lab VPC. In the Subnet section, select Lab Public Subnet. In the Auto-assign Public IP section, select Use subnet setting (Enable) Click Next: Add Storage. Click Next: Add Tags to move to the next step. Click Next: Configure Security Group to move to the next step. On page Step 6: Configure Security Group. Select Select an existing security group. Select security group SG Public Linux Instance. Click Review and Launch. The warning dialog box appears because we do not configure the firewall to allow connections to port 22, Click Continue to continue.\nAt page Step 7: Review Instance Launch.\nClick Launch. In the Select an existing key pair or create a new key pair dialog box. Click to select Create a new key pair. In the Key pair name field, enter LabKeypair. Click Download Key Pair and save it to your computer. Click Launch Instances to create EC2 server. Click View Instances to return to the list of EC2 instances.\nClick the edit icon under the Name column.\nIn the Edit Name dialog box, enter Public Linux Instance. Click Save. Next, we will do the same to create an EC2 Instance Windows running in the Private subnet.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.4-enablelogssm/",
	"title": "Budgets",
	"tags": [],
	"description": "",
	"content": "Create Budgets Đăng nhập vào console AWS Tìm kiếm và chọn Billing and cost Management Trang home \u0026ldquo;billing cost Management\u0026rdquo; Chọn tab bill phía bên trái Create a Budgets Choose budgets Type Use template Monthly cost budget Điền thông tin cho budgets Budgets name Enter your budgeted amount Email recipients Cảnh báo của Budgets sau khi tạo "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.3-createloggroup/",
	"title": "Role AWS",
	"tags": [],
	"description": "",
	"content": " Đăng nhập vào console AWS IAM Click chọn Role Click \u0026ldquo;create role\u0026rdquo; Click Select trusted ntity click AWS service Service or use case : ec2 use case : ec2 Set permission policies Click amazonEC2FullAcess Review and create Chúng ta đã tạo xong role cho AWS "
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]